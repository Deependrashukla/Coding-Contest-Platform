{
    "cells": [
        {
            "language": "markdown",
            "source": [
                "1. Users Collection\nIn MongoDB, the Users model can be represented as a single collection. Embedded documents can be used to store related data like user_details, social_media_links, addresses, and more."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "{\n  \"_id\": \"user_id\",\n  \"name\": \"User's name\",\n  \"email\": \"user@example.com\",\n  \"phone_number\": \"1234567890\",\n  \"overall_rank\": 5,\n  \"user_created_at\": \"2023-03-22T12:00:00Z\",\n  \"user_updated_at\": \"2023-03-22T12:00:00Z\",\n  \n  \"details\": {\n    \"bio\": \"User bio\",\n    \"skills\": \"User skills\",\n    \"achievements\": \"User achievements\"\n  },\n  \n  \"social_media_links\": [\n    {\n      \"platform_name\": \"LinkedIn\",\n      \"link\": \"https://linkedin.com/userprofile\"\n    },\n    {\n      \"platform_name\": \"GitHub\",\n      \"link\": \"https://github.com/userprofile\"\n    }\n  ],\n\n  \"addresses\": [\n    {\n      \"address\": \"User address\",\n      \"state\": \"State\",\n      \"country\": \"Country\",\n      \"pincode\": \"123456\",\n      \"updated_at\": \"2023-03-22T12:00:00Z\"\n    }\n  ]\n}\n"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "2. Contests Collection\nSince each contest has its own set of details, they can be embedded directly within the contest document. Other fields related to the contest can remain at the top level."
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "{\n  \"_id\": \"contest_id\",\n  \"host_id\": \"user_id\",\n  \"contest_name\": \"Contest name\",\n  \"start_date_time\": \"2023-04-01T10:00:00Z\",\n  \"end_date_time\": \"2023-04-01T12:00:00Z\",\n  \"organization_type\": \"Organization type\",\n  \"organization_name\": \"Organization name\",\n  \"participant_limit\": 100,\n  \"contest_visibility\": \"Public\",\n  \"contest_created_at\": \"2023-03-22T12:00:00Z\",\n  \"contest_updated_at\": \"2023-03-22T12:00:00Z\",\n  \"registration_deadline\": \"2023-03-31T12:00:00Z\",\n\n  \"details\": {\n    \"contest_banner_image\": \"https://example.com/banner.jpg\",\n    \"contest_banner_image_name\": \"banner.jpg\",\n    \"contest_default_banner_image\": \"https://example.com/default.jpg\",\n    \"about\": \"About the contest\",\n    \"eligibility\": \"Eligibility criteria\",\n    \"rules\": \"Contest rules\",\n    \"others\": \"Other information\"\n  },\n  \n  \"prizes\": [\n    {\n      \"prize_position\": \"First\",\n      \"prize_description\": \"Description of first prize\",\n      \"prize_amount\": 500.00\n    },\n    {\n      \"prize_position\": \"Second\",\n      \"prize_description\": \"Description of second prize\",\n      \"prize_amount\": 300.00\n    }\n  ],\n\n  \"problems\": [\n    {\n      \"problem_id\": \"problem_id\",\n      \"name\": \"Problem name\",\n      \"description\": \"Problem description\",\n      \"input_format\": \"Input format\",\n      \"output_format\": \"Output format\",\n      \"constraints\": \"Problem constraints\",\n      \"difficulty_level\": \"Medium\",\n      \"doc_references\": \"Reference documentation\",\n      \"weightage\": 10,\n      \"tags\": [\"tag1\", \"tag2\"],\n      \"created_at\": \"2023-03-22T12:00:00Z\",\n      \"updated_at\": \"2023-03-22T12:00:00Z\",\n      \n      \"test_cases\": [\n        {\n          \"input\": \"Test case input\",\n          \"expected_output\": \"Expected output\",\n          \"time_limit\": 1,\n          \"memory_limit\": 256\n        }\n      ]\n    }\n  ]\n}\n"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                ""
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "3. Contest Registrations Collection\nIn the registration case, instead of embedding the contest and user data, we use references (user_id and contest_id) for the relationship between users and contests."
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "{\n  \"_id\": \"registration_id\",\n  \"participant_id\": \"user_id\",\n  \"contest_id\": \"contest_id\",\n  \"registration_date_and_time\": \"2023-03-22T12:00:00Z\",\n  \"contest_submission_time\": \"2023-04-01T12:30:00Z\",\n  \"total_time_taken\": 7200  // total time in seconds\n}\n"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "4. Submissions Collection\nFor each submission, we store references to the user, contest, problem, and programming language used. This allows for efficient querying and separation of large objects.\n"
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "{\n  \"_id\": \"submission_id\",\n  \"contest_id\": \"contest_id\",\n  \"problem_id\": \"problem_id\",\n  \"participant_id\": \"user_id\",\n  \"submitted_at\": \"2023-04-01T11:30:00Z\",\n  \"language\": {\n    \"language_id\": \"language_id\",\n    \"language\": \"Python\"\n  },\n  \"code\": \"Submitted code here\",\n  \"score\": 95.50,\n  \n  \"test_case_results\": [\n    {\n      \"testcase_id\": \"testcase_id\",\n      \"is_passed\": true,\n      \"execution_time\": 0.2,\n      \"memory_used\": 256\n    }\n  ]\n}\n"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "5. Problems Collection\nProblems can be stored as a separate collection, with embedded test cases and related fields. Each problem can also have references to users who created them."
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "{\n  \"_id\": \"problem_id\",\n  \"host_id\": \"user_id\",\n  \"name\": \"Problem name\",\n  \"description\": \"Problem description\",\n  \"input_format\": \"Input format\",\n  \"output_format\": \"Output format\",\n  \"constraints\": \"Problem constraints\",\n  \"difficulty_level\": \"Medium\",\n  \"doc_references\": \"Reference documentation\",\n  \"weightage\": 10,\n  \"tags\": [\"tag1\", \"tag2\"],\n  \"created_at\": \"2023-03-22T12:00:00Z\",\n  \"updated_at\": \"2023-03-22T12:00:00Z\",\n  \n  \"test_cases\": [\n    {\n      \"testcase_id\": \"testcase_id\",\n      \"input\": \"Test case input\",\n      \"expected_output\": \"Expected output\",\n      \"time_limit\": 1,\n      \"memory_limit\": 256\n    }\n  ]\n}\n"
            ],
            "outputs": []
        }
    ]
}